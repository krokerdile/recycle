buildscript {
    ext {
        projectName = 'recycle'
        projectVersion = '1.0.0'
        springBootVersion = '2.7.5'
        dependencyManagementVersion = '1.0.15.RELEASE'

        // jwt
        jsonwebtokenVersion = '0.11.5'

        // jsr
        jsr305Version = '3.0.1'

        // spotless
        spotlessVersion = '6.8.0'

        // swagger & restdocs
        asciidoctorVersion = '3.3.2'
        epagesRestDocsApiSpecVersion = '0.16.0'
        hidetakeSwaggerGeneratorVersion = '2.18.2'
        springDocOpenApiUiVersion = '1.6.9'
        swaggerUIVersion = '4.1.3'

        // flyway
        flywayVersion = '9.16.0'
    }
}

plugins {
    id 'java'

    // spring
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"

    // code quality
    id "com.diffplug.spotless" version "${spotlessVersion}"

    // docs generation
    id 'org.asciidoctor.jvm.convert' version "${asciidoctorVersion}"
    id 'com.epages.restdocs-api-spec' version "${epagesRestDocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version "${hidetakeSwaggerGeneratorVersion}"

    // test coverage
    id 'jacoco'
}

apply from: './tasks/install-git-hooks.gradle'
apply from: './tasks/assemble-docs-task.gradle'

allprojects {
    apply plugin: 'com.diffplug.spotless'
    apply from: rootProject.rootDir.toString() + '/tasks/formatting-task.gradle'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.hidetake.swagger.generator'

    group = 'com.zzaug'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    allprojects {}

    dependencies {
        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // flyway
        implementation "org.flywaydb:flyway-core:${flywayVersion}"
        implementation 'org.flywaydb:flyway-mysql'

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "failed"
            exceptionFormat "full"
        }
    }
}
